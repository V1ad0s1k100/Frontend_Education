.box1 {
    padding: 2px;
    font-size: 25px;
    width: 200px;
    height: 150px;
    border: 2px solid red;
    /* Свойство overflow определяет, что происходит, если содержимое элемента переполняет его блок.
    /* overflow: visible | hidden | scroll | auto | initial | inherit;

    /* Значение visible означает, что переполнение будет видно за пределами блока. */

    /* Значение hidden означает, что переполнение будет скрыто и не будет видно за пределами блока. */

    /* Значение scroll означает, что переполнение будет скрыто, но появится полоса прокрутки. */

    /* Значение auto означает, что браузер решит, как отображать переполнение. Полоса прокрутки повится в случае ее надобности в отличие от scroll */

    /* Значение clip означает, что переполнение будет обрезано и не будет видно за пределами блока.
    В отличие от hidden, clip не обрабатывает прокрутку через JS и не отображает содержимое за пределами блока. */

    /* overflow-x: hidden означает, что горизонтальное переполнение будет скрыто и не будет видно за пределами блока. */
    /*overflow-x: hidden;*/

    /* overflow-y: scroll означает, что вертикальное переполнение будет скрыто, но появится полоса прокрутки. */

    /*overflow-y: scroll;*/
    /*Также можно использовать overflow: hidden scroll*/

    /* overflow: visible clip устраняет ошибку overflow: visible hidden, 
    которая возникает при попытке одновременно использовать два несовместимых значения overflow. */

    overflow: visible clip;
}
.box2 {
    margin-top: 100px;
    font-size: 19px;
    padding: 2px;
    width: 200px;
    height: 200px;
    border: 2px solid red;
    
    /* Свойство opacity задает прозрачность элемента.
    Значение 0.5 означает, что элемент будет полупрозрачным (50% видимости). Принимает значения 0-1 */

    /* Cвойство visibility делает элемент полностью невидимым, но оставляет его в потоке документа.*/
    
    /*
    opacity:
    
    Значение 0.5 означает, что элемент будет полупрозрачным (50% прозрачности).
    Элемент остается на странице и занимает своё место в потоке документа.
    Элемент по-прежнему будет интерактивным (например, можно кликнуть на ссылки внутри него).
    
    visibility:
    
    Значение hidden означает, что элемент будет скрыт.
    Элемент также остается на странице и занимает своё место в потоке документа.
    Однако элемент не будет интерактивным (нельзя кликнуть на ссылки внутри него).
    */

    visibility: visible;
}
img[alt='Фото кота1'] {
    width: 220px;
    height: 200px;
    /* Свойство clip-path позволяет создавать сложные фигуры в CSS, ограничивая элемент базовой формой (круг, эллипс, многоугольник или вставка) или источником SVG.

    В данном случае используется форма круга с радиусом 50% и центром в середине изображения. */
    clip-path: circle(50% at 50% 50%);
}

img[alt='Фото кота2'] {
    width: 220px;
    height: 200px;

    /* В данном случае используется форма эллипса с радиусом 50% и центром в середине изображения. Обязательными являются первые 2 значения указывающие ширину и длину эллипса */

    clip-path: ellipse(50% 40% at 50% 50%);
}

img[alt='Фото кота3'] {
    width: 220px;
    height: 200px;
    
    
    /* В данном случае используется функция polygon, которая определяет многоугольник с вершинами в следующих координатах:
        (x,y) - координаты вершин многоугольника
        - 50% 0%: верхняя середина
        - 100% 50%: правая середина
        - 50% 100%: нижняя середина
        - 0% 50%: левая середина
    */
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

img[alt='Фото кота4'] {
    width: 800px;
    height: 800px;
    
    /*В данном случае используется URL для определения формы обрезки. */
    clip-path: url(#clip);
}