// const year = 2024
const year = 2034
// const year = 2100

if (year === 2024) { // Проверка условия на True первым условием
    console.log("Ура, с новым 2024 годом")
} else if (year === 2034) { // Проверка условия на True вторым условием
    console.log("Рановато вас еще поздравлять :)")
} else { // Выполняется если все верхнии условия выдали False
    console.log("Похоже конец :(")
}


/* 
Весь ниже приведенный код для присвоения значения переменной 
при каком-то условии принято делать через тернарный оператор

const message = null

if (year === 2024) {
    message = "Буду учиться фронтенду!"
} else {
    message = "Неизвестный год :("
}
*/

// Ниже приведен пример тернарного оператора

const message = year === 2024 
? 'Начинаю учиться фронтенду!' // Если условие было True
//'Неизвестный год :('  Если условие было False
// Либо можно продолжить запись условий
: year === 2034 
? 'Нейросети победили' 
: 'Неизвестный год'

console.log(message)


// Логические операнды

false || false // Логическое ИЛИ

/**
 * Переменная `result` будет содержать первое истинное значение из списка значений.
 * В данном случае значения оцениваются слева направо:
 * - `null` является ложным
 * - `""` (пустая строка) является ложным
 * - `100` является истинным
 * - `200` и `300` не оцениваются, так как `100` уже истинное
 * 
 * Таким образом, `result` будет присвоено значение `100`.
 */

const result = null || "" || 100 || 200 || 300

console.log(result)

false && false // Логическое И

/*
Оператор && возвращает первое ложное значение (false) или последнее истинное значение (truthy), если все значения истинные.

Вот что происходит шаг за шагом:

 - null - это ложное значение (false).
 - Поскольку null является ложным значением, оператор && сразу возвращает null и не проверяет остальные значения.
Таким образом, переменная result_1 будет равна null.
*/

const result_1 = null && "" && 100 && 200 && 300
console.log(result_1)

!false // Логическое НЕ

console.log(!false)

// Логическое отрицание строки '0'
console.log(!'0')
// Строка '0' является истинным значением (true). Применение оператора логического отрицания (!) превращает его в ложное значение (false). 
// Поэтому результатом выполнения этой строки будет false.

// Двойное логическое отрицание числа 0
console.log(!!0)
// Число 0 является ложным значением (false). Первый оператор логического отрицания (!) превращает его в true, а второй (!) снова превращает его в false. 
// Поэтому результатом выполнения этой строки будет false.

// Равносильно приведенному выше
console.log(Boolean('0'))
console.log(Boolean(0))

const a = null
const b = 100

// Использование логического оператора ИЛИ (||) для присвоения значения переменной `result_2`.
// Если `a` является ложным значением (null, undefined, 0, "", false), то `result_2` будет присвоено значение `b`.
// В данном случае `a` равно null, поэтому `result_2` будет равно 100.
const result_2 = a || b

// Использование оператора нулевого слияния (??) для присвоения значения переменной `result_3`.
// Оператор ?? возвращает первый операнд, если он не является null или undefined, иначе возвращает второй операнд.
// В данном случае `a` равно null, поэтому `result_3` будет равно 100.
const result_3 = a ?? b

console.log('')

console.log(result_2)
console.log(result_3)